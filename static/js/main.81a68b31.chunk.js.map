{"version":3,"sources":["AgeCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["AgeCalculator","_useState","useState","_useState2","_slicedToArray","birthDate","setBirthDate","_useState3","_useState4","age","setAge","React","createElement","className","type","value","onChange","event","target","onClick","today","Date","birthDateObj","calculatedAge","Math","floor","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mMA+BeA,MA5Bf,WAAyB,IAAAC,EACWC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAAAI,EACRL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAQlB,OACEG,IAAAC,cAAA,OAAKC,UAAU,4BACbF,IAAAC,cAAA,MAAIC,UAAU,wBAAuB,kBACrCF,IAAAC,cAAA,SACEE,KAAK,OACLC,MAAOV,EACPW,SAAU,SAAAC,GAAK,OAAIX,EAAaW,EAAMC,OAAOH,QAC7CF,UAAU,yBAEZF,IAAAC,cAAA,UAAQO,QAfS,WACnB,IAAMC,EAAQ,IAAIC,KACZC,EAAe,IAAID,KAAKhB,GACxBkB,EAAgBC,KAAKC,OAAOL,EAAQE,GAAY,UACtDZ,EAAOa,IAW0BV,UAAU,yBAAwB,aAGhEJ,GAAOE,IAAAC,cAAA,KAAGC,UAAU,yBAAwB,eAAaJ,EAAI,aCdrDiB,MARf,WACE,OACEf,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACZ,EAAa,QCML2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,IAAAC,cAACD,IAAMkC,WAAU,KACflC,IAAAC,cAACc,EAAG,QAORC","file":"static/js/main.81a68b31.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './AgeCalculator.css';\n\nfunction AgeCalculator() {\n  const [birthDate, setBirthDate] = useState('');\n  const [age, setAge] = useState('');\n\n  const calculateAge = () => {\n    const today = new Date();\n    const birthDateObj = new Date(birthDate);\n    const calculatedAge = Math.floor((today - birthDateObj) / (365.25 * 24 * 60 * 60 * 1000));\n    setAge(calculatedAge);\n  };\n  return (\n    <div className=\"age-calculator-container\">\n      <h2 className=\"age-calculator-title\">Age Calculator</h2>\n      <input\n        type=\"date\"\n        value={birthDate}\n        onChange={event => setBirthDate(event.target.value)}\n        className=\"age-calculator-input\"\n      />\n      <button onClick={calculateAge} className=\"age-calculator-button\">\n        Calculate\n      </button>\n      {age && <p className=\"age-calculator-result\">Your age is {age} years.</p>}\n    </div>\n  );\n  \n}\n\nexport default AgeCalculator;\n","import React from 'react';\nimport AgeCalculator from './AgeCalculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AgeCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}